<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="6994c3dc-3088-4e2b-a006-a87e8853e461" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/monorepo.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/duod/pkg/spec/spec.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/readme.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/duod/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/duod/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/chainrpc/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/chainrpc/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/fec/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/fec/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/opts/genopts/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/opts/genopts/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/opts/lint.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/opts/lint.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/consume/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/consume/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/consume/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/consume/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/example/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/example/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/example/serve/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/example/serve/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/pipe.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/pipe.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/pipelog/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/pipelog/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/pipelog/pipelog.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/pipelog/pipelog.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/serve/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/serve/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/serve/serve.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/serve/serve.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/example/controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/example/controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/example/hello/hello/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/example/hello/hello/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/example/hello/implementation.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/example/hello/implementation.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/worker/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/worker/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/worker/worker.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/pkg/pipe/stdconn/worker/worker.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/pod.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/setup.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/duod/version/version.go" beforeDir="false" afterPath="$PROJECT_DIR$/duod/version/version.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/spore/.idea/spore.iml" beforeDir="false" afterPath="$PROJECT_DIR$/spore/.idea/spore.iml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
    <option name="useGoPathFromSystemEnvironment" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/glom/pkg/pathtree/pathtree.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProjectId" id="1qd9qKmAtjYXlFb4QPQ6gcvi1Lk" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go Application" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="full.screen.before.presentation.mode" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="idea.background.editor" value="$PROJECT_DIR$/logo/logo_nocircle.svg,2,scale,center" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/gel" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/gel" />
      <recent name="$PROJECT_DIR$/gel/cmd/iconchooser/gen" />
      <recent name="$PROJECT_DIR$/gel/cmd" />
      <recent name="$PROJECT_DIR$/gel/cmd/iconchooser" />
      <recent name="$PROJECT_DIR$/glom/pkg/pathtree" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/p9c/monorepo/gel/cmd/iconchooser">
    <configuration name="go build github.com/p9c/monorepo/gel/cmd/hello" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="monorepo" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/gel/cmd/hello/main.go" />
      <package value="github.com/p9c/monorepo/gel/cmd/hello" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/p9c/monorepo/gel/cmd/iconchooser" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="monorepo" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/gel/cmd/iconchooser/main.go" />
      <package value="github.com/p9c/monorepo/gel/cmd/iconchooser" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/p9c/monorepo/gel/cmd/iconchooser/gen" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="monorepo" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/gel/cmd/iconchooser/gen/main.go" />
      <package value="github.com/p9c/monorepo/gel/cmd/iconchooser/gen" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/p9c/monorepo/glom" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="monorepo" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/glom/glom.go" />
      <package value="github.com/p9c/monorepo/glom" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/p9c/monorepo/gel/cmd/iconchooser" />
        <item itemvalue="Go Build.go build github.com/p9c/monorepo/gel/cmd/hello" />
        <item itemvalue="Go Build.go build github.com/p9c/monorepo/gel/cmd/iconchooser/gen" />
        <item itemvalue="Go Build.go build github.com/p9c/monorepo/glom" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$" />
      <path value="$PROJECT_DIR$/duod" />
      <path value="$PROJECT_DIR$/gel" />
      <path value="$PROJECT_DIR$/glom" />
      <path value="$PROJECT_DIR$/interrupt" />
      <path value="$PROJECT_DIR$/log" />
      <path value="$PROJECT_DIR$/logo" />
      <path value="$PROJECT_DIR$/opts" />
      <path value="$PROJECT_DIR$/qu" />
      <path value="$PROJECT_DIR$/spore" />
    </ignored-roots>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>